name: EDT CI
on:
    push:
        branches:
            - "main"
            - "feat/*"
    pull_request:
        branches:
            - main

jobs:
    test_lint:
        runs-on: ubuntu-latest
        if: ${{ !github.event.created && github.repository != 'garronej/ts-ci' }}
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
            - uses: bahmutov/npm-install@v1
            - name: If this step fails run 'npm run lint' and 'npm run format' then commit again.
              run: |
                  PACKAGE_MANAGER=npm
                  if [ -f "./yarn.lock" ]; then
                      PACKAGE_MANAGER=yarn
                  fi
                  $PACKAGE_MANAGER run lint:check
                  $PACKAGE_MANAGER run format:check
    test:
        runs-on: ${{ matrix.os }}
        needs: test_lint
        strategy:
            matrix:
                node: ["16"]
                os: [ubuntu-latest]
        name: Test with Node v${{ matrix.node }} on ${{ matrix.os }}
        steps:
            - name: Tell if project is using npm or yarn
              id: step1
              uses: garronej/ts-ci@v1.1.7
              with:
                  action_name: tell_if_project_uses_npm_or_yarn
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node }}
            - uses: bahmutov/npm-install@v1
            - if: steps.step1.outputs.npm_or_yarn == 'yarn'
              run: |
                  yarn build
                  yarn test-ci --coverage
            - if: steps.step1.outputs.npm_or_yarn == 'npm'
              run: |
                  npm run build
                  npm test-ci --coverage
            # Build sonar reports
            - name: Upload deploy artifact
              uses: actions/upload-artifact@v2
              with:
                  name: coverage
                  path: coverage/

    sonarcloud:
        name: SonarCloud
        runs-on: ubuntu-latest
        needs: test
        steps:
            - uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            - name: SonarCloud Scan
              uses: SonarSource/sonarcloud-github-action@master
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    check_if_version_upgraded:
        name: Check if version upgrade
        runs-on: ubuntu-latest
        needs: test
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        outputs:
            from_version: ${{ steps.step1.outputs.from_version }}
            to_version: ${{ steps.step1.outputs.to_version }}
            is_upgraded_version: ${{ steps.step1.outputs.is_upgraded_version }}
            is_release_beta: ${{steps.step1.outputs.is_release_beta }}
        steps:
            - uses: garronej/ts-ci@v1.1.4
              id: step1
              with:
                  action_name: is_package_json_version_upgraded
                  branch: ${{ github.head_ref || github.ref }}
    release:
        runs-on: ubuntu-latest
        needs:
            - check_if_version_upgraded
        if: |
            needs.check_if_version_upgraded.outputs.is_upgraded_version == 'true' &&
            (
                github.event_name == 'push' ||
                needs.check_if_version_upgraded.outputs.is_release_beta == 'true'
            )
        steps:
            - uses: actions/checkout@v3
              with:
                  ref: ${{ github.ref }}
            - uses: softprops/action-gh-release@v0.1.14
              with:
                  name: Release v${{ needs.check_if_version_upgraded.outputs.to_version }}
                  tag_name: v${{ needs.check_if_version_upgraded.outputs.to_version }}
                  target_commitish: ${{ github.head_ref || github.ref }}
                  generate_release_notes: true
                  draft: false
                  prerelease: ${{ needs.check_if_version_upgraded.outputs.is_release_beta == 'true' }}
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
